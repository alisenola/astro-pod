---
import DownloadIcon from "./icons/downloadIcon.astro";
import PlayIcon from "./icons/playIcon.astro";
import PauseIcon from "./icons/pauseIcon.astro";
import AudioIcon from "./icons/audioIcon.astro";
import AudioMutedIcon from "./icons/audioMutedIcon.astro";
---

<div id="audio-player-container" class="w-full bottom-0 sticky bg-base-100 flex px-5 h-16 items-center">
  <audio src="/audio/musica.mp3" preload="metadata"></audio>
  <label class="swap">
    <input type="checkbox" id="play-icon" />
    <div id="play-icon-svg" class="swap-off">
      <PlayIcon />
    </div>
    <div id="pause-icon-svg" class="swap-on">
      <PauseIcon />
    </div>
  </label>
  <span id="current-time" class="ml-5 mr-2">0:00</span>/
  <span id="duration" class="ml-2">0:00</span>
  <input id="seek-slider" type="range" min="0" max="100" value="0" class="range range-xs mx-5" />
  <label class="ml-5 swap">
    <input id="mute-icon" type="checkbox" />
    <div class="swap-off">
      <AudioIcon />
    </div>
    <div class="swap-on">
      <AudioMutedIcon />
    </div>
  </label>
  <div class="dropdown dropdown-top dropdown-end ml-5 h-6">
    <button tabindex="0">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="icon icon-tabler icon-tabler-dots-vertical"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        stroke-width="2"
        stroke="currentColor"
        fill="none"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
        <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0"></path>
        <path d="M12 19m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0"></path>
        <path d="M12 5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0"></path>
      </svg>
    </button>
    <ul tabindex="0" class="dropdown-content z-[1] menu p-2 shadow bg-base-100 rounded-box w-52">
      <li>
        <a>
          <DownloadIcon />
          Download</a
        >
      </li>
    </ul>
  </div>
</div>

<script>
  const playIconContainer = document.getElementById("play-icon");
  const muteIconContainer = document.getElementById("mute-icon");

  let playState = "play";
  let isMuted = false;

  const audio = document.querySelector("audio");
  const durationContainer = document.getElementById("duration");
  const currentTimeContainer = document.getElementById("current-time");
  const playIcon = document.getElementById("play-icon-svg");
  const pauseIcon = document.getElementById("pause-icon-svg");
  const seekSlider = document.getElementById("seek-slider");

  const calculateTime = (secs) => {
    const minutes = Math.floor(secs / 60);
    const seconds = Math.floor(secs % 60);
    const returnedSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;
    return `${minutes}:${returnedSeconds}`;
  };

  const displayDuration = () => {
    durationContainer.textContent = calculateTime(audio.duration);
  };

  if (audio.readyState > 0) {
    displayDuration();
  } else {
    audio.addEventListener("loadedmetadata", () => {
      displayDuration();
      seekSlider?.setAttribute("max", audio.duration);
    });
  }

  muteIconContainer.addEventListener("click", () => {
    isMuted = !isMuted;
    audio.muted = isMuted;
  });

  playIconContainer.addEventListener("click", () => {
    if (playState === "play") {
      audio.play();
      // pauseIcon.classList.remove("hidden");
      // playIcon.classList.add("hidden");
      playState = "pause";
    } else {
      audio.pause();
      // playIcon.classList.remove("hidden");
      // pauseIcon.classList.add("hidden");
      playState = "play";
    }
  });

  seekSlider.addEventListener("input", () => {
    currentTimeContainer.textContent = calculateTime(seekSlider.value);
  });

  seekSlider.addEventListener("change", () => {
    audio.currentTime = seekSlider.value;
  });

  audio.addEventListener("timeupdate", () => {
    seekSlider.value = Math.floor(audio.currentTime);
    currentTimeContainer.textContent = calculateTime(seekSlider.value);
  });
</script>
