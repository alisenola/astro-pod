---
import { CollectionEntry, getCollection } from "astro:content";
import { episodeSchema } from "../../content/config";
import EpisodeLayout from "../../layouts/EpisodeLayout.astro";
import AudioPlayer from "../../components/audioPlayer.astro";
import PlainTextRenderer from "marked-plaintext";
import {marked} from "marked";

export async function getStaticPaths() {
  const postEntries = await getCollection("episode");
  return postEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

interface Props {
  entry: CollectionEntry<"episode">;
}

const { entry } = Astro.props;
const episode: episodeSchema = entry.data;
const { Content } = await entry.render();

const renderer = new PlainTextRenderer();
const description = marked.parse(entry.body.slice(0, 200), { renderer: renderer });
---

<EpisodeLayout
  title={episode.title}
  pubDate={episode.pubDate}
  cover={episode.cover}
  explicit={episode.explicit}
  description={description}
  cover={episode.cover}
>
  <Content />
</EpisodeLayout>

<AudioPlayer />

<script define:vars={{ episode }}>
const musicPlayer = document.getElementById("audio-player-container");
const audioDownloadLink = document.getElementById("audio-download-link");

  musicPlayer?.classList.remove("hidden", "opacity-0");
  musicPlayer?.classList.add("flex");
  const audio = document.querySelector("audio");
  audio.src = episode.audioUrl;
  audioDownloadLink.href = episode.audioUrl;
</script>
